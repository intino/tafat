dsl Proteo

Concept Periodic is abstract
	var native:Execute execute is final

Concept Action extends Periodic is feature into prototype
	var native:Action action
	var native:Execute execute = '$.action()' is final

Concept ConditionalAction extends Periodic is feature into prototype
	var native:Check condition = 'true'
	var native:Action action
	var native:Execute execute = '{if($.condition()) $.action();}' is final

Concept EquationSystem is feature terminal
	var word:[Euler] solver = Euler
	var double step = 0.1
	Concept Element
		var native:Function function
		sub Stock
		sub Flow

Concept StateChart extends Periodic into prototype
	var native:Execute execute = 'tafat.engine.StatechartUpdater.update($, step)' is final
	var string message = ""
	var native:Message receiveMessage = '$.message(message);if($.current() != null) $.current().receiveMessage(message)' is final
	var StateChart current = empty
	Concept State extends StateChart
		Concept Action
			var native:Action action is final
			sub EntryAction
			sub ExitAction
			sub PeriodicAction
	Concept Transition
		var State from is final
		var State to is final
		var native:Action action = ''
		Concept Trigger is single
			var native:CheckTransition check
			sub Condition > var native:CheckTransition check
			sub TimeBased
				var measure:Time timeLeft = 0 minute
				var native:CheckTransition check =
				--
				$.timeLeft($.timeLeft() - advancedTime);
				return $.timeLeft() <= 0;
				--
				var native:Action activate
				sub Timeout
					var native:Action activate = '$.timeLeft($.timeout())'
					var native:Timeout timeout is final
				sub After
					var native:Action activate = '$.timeLeft($.fixedTime())'
					var measure:Time fixedTime is final
				sub Rate
					var native:Action activate = '$.timeLeft($.unit() / $.times())'
					var integer:times times; var integer unit
			sub Message
				var string expectedMessage
				var native:Check check = '$._owner(StateChart.class).message().equals($.expectedMessage())'

Concept Task  is feature into prototype
	var word:DayOfWeek... days = Monday Tuesday Wednesday Thursday Friday Saturday Sunday
	var date scheduledDate = ""
	var native:Check check = '!$.scheduledDate().isAfter(tafat.engine.Date.getDateTime())' is final
	var native:Action program = '$.scheduledDate(tafat.engine.helpers.TaskHelper.scheduledDate($))' is final
	Concept Start is required single
		var time start is final
		var measure:Time deviation = 0 minute
	Concept Finish is single
		sub End
			var time end is final
			var measure:Time deviation = 0 minute
		sub Duration
			var measure:Time duration is final
			var measure:Time deviation = 0 minute
	has Task
	has JobAction
	Concept Action
		var native:Action action is final
		sub StartAction
		sub RecurrentAction
		sub EndAction

Concept JobAction is feature
	var Job... job is final
	sub StartJob
	sub RecurrentJob
	sub EndJob

Concept Job is feature
	Concept Start is single
		var measure:Time start is final
		var measure:Time deviation = 0 minute
	Concept Duration is single
		var measure:Time duration is final
		var measure:Time deviation = 0 minute
	has Job
	has JobAction
	Concept Action
		var native:Action action
		sub StartAction
		sub RecurrentAction
		sub EndAction

Concept TableFunction is feature
	var PointSet pointSet is final
	Concept Interpolation is single
		sub NoneInterpolation
		sub LinearInterpolation
		sub PolynomialInterpolation
		sub SplineInterpolation
		sub StepInterpolation
	Concept Extrapolation is single
		sub NoneExtrapolation
		sub CustomExtrapolation > var native:Function function
		sub NearestPointExtrapolation
		sub RepeatSeriesExtrapolation
		sub LinearExtrapolation
		sub PolynomialExtrapolation
		sub SplineExtrapolation
		sub StepExtrapolation

Concept PointSet is feature
	Concept Definition is final
		sub Point > var double x is final; var double y is final
		sub X is single > var double... values is final
		sub Y is single > var double... values is final

Concept Map is feature
	var native:Get get = '0' is final
	Concept Entry > var string key; var double value
