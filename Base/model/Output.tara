dsl Proteo 

Concept Output is terminal
	var string language
	var string simulationId

	Concept Extractor
		var string label is final
		var native:StashPath path is final
		var native:Collect collect is final
		var native:Stash buildStash is final

		sub Export
			var native:ExtractMember extract is final
			var native:StashPath path = '"res/Dimension.stash"' is final
			var native:Stash buildStash =
			--
			return $.collect().stream()
						.map(l -> {
							tafat.engine.output.Member member = new tafat.engine.output.Member();
							$.extract(member, l);
							return $.toCase(member);
						})
						.collect(java.util.stream.Collectors.toList());
			--is final
			var native:MemberToCase toCase =
			--
			tara.io.Case aCase = new tara.io.Case();
            aCase.name = member.id();
            aCase.types.add($.label());
            member.attributes().forEach((k, v) -> aCase.variables.add(new tara.io.Variable(k, new java.util.ArrayList<>(java.util.Arrays.asList(v)))));
            return aCase;
			--is final

		sub Plot
			var word:TimeScale timeScale is final
			var native:ExtractFact extract is final
			var native:StashPath path =
			--
            LocalDateTime date = tafat.engine.Date.getDateTime();
            if($.timeScale() == tafat.words.TimeScale.Minutes)
							return date.getYear() + "/" + date.getDayOfYear() + "/" + date.getHour() + ".stash";
            return "";
			--is final
			var native:Stash buildStash =
			--
			return $.collect().stream()
				.map(l -> {
					tafat.engine.output.Fact fact = new tafat.engine.output.Fact(tafat.engine.Date.format(java.time.format.DateTimeFormatter.ofPattern("dd/MM/yyyy HH:mm:ss")));
					$.extract(fact, l);
					return $.toCase(fact);
				})
				.collect(java.util.stream.Collectors.toList());
			--is final
			var native:FactToCase toCase =
			--
			tara.io.Case aCase = new tara.io.Case();
			            aCase.types.add($.label());
			            fact.attributes().forEach((k, v) -> aCase.variables.add(new tara.io.Variable(k, new java.util.ArrayList<>(java.util.Arrays.asList(v)))));
            aCase.variables.add(new tara.io.Variable("source", new java.util.ArrayList<>(java.util.Arrays.asList($._owner(Output.class).simulationId()))));
			            return aCase;
			--is final