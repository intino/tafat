dsl Tafat
use PowerGrid

Behavior Electrical &000.001
	sub BatteryElectrical
		var measure:Power activePower = 0 W
		var measure:Energy capacity
		var measure:Percentage stateOfCharge
		var word mode > Idle*; Charging; Discharging
		var measure:Power maxDischargePower
		var measure:Power maxChargePower
		var measure:Percentage transferLoses = 20 %

		sub Mode // BatteryFullBehaviorBasic
			on Battery
				Condition > Check("stateOfCharge() > 95 && mode() == Mode.Charging"); Action("mode(Mode.Idle)")
				Condition > Check("stateOfCharge() > 20 && mode() == Mode.Discharging"); Action("mode(Mode.Idle)")

		sub Power

			sub BasicPowerControl // BatteryFullBehaviorChargeDischargeBasic
				on Battery
					Condition > Check("mode() == Mode.Idle"); Action("activePower(0)")
					Condition > Check("mode() == Mode.Charging"); Action("activePower(maxChargePower())")
					Condition > Check("mode() == Mode.Discharging"); Action("activePower(maxDischargePower())")

			sub TimeBasedPowerControl
				on Battery
					var measure:Time timeToCharge
					var measure:Time timeToDischarge
					InitedValue WattsPerSecondCharging > Calculator("((capacity() / timeToCharge()) * (1 + transferLoses())) * 1000")
					InitedValue WattsPerSecondDischarging > Calculator("capacity / timeToDischarge * 1000") // TODO TAKE DEFAULT MAX POWER
					Condition > Check("mode() == Mode.Idle"); Action("activePower(0)")
					Condition > Check("mode() == Mode.Charging"); Action("activePower(wattsPerSecondCharging())")
					Condition > Check("mode() == Mode.Discharging"); Action("activePower(wattsPerSecondDischarging())")

			sub CurvePowerControl // BatteryFullBehaviorChargeDischargeCurve
				on Battery
					PointSet Charge > Point(0.0, 0.7992); Point(0.8, 1.0); Point(1.0, 0.3846)
					PointSet Discharge > Point(0.0, 0.7272); Point(0.8, 0.8181); Point(1.0, 1.0)
					TableFunction(Charge) ChargeCurve > LinearInterpolation; LinearExtrapolation
					TableFunction(Discharge) DischargeCurve > LinearInterpolation; NoneExtrapolation
					Condition > Check("mode() == Mode.Idle"); Action("activePower(0)")
					Condition > Check("mode() == Mode.Charging"); Action("activePower(chargeCurve().y(stateOfCharge))")
					Condition > Check("mode() == Mode.Discharging"); Action("activePower(dischargeCurve().y(stateOfCharge))")